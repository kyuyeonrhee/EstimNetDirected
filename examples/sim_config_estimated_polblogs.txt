##############################################################################
#
# example setting file for SimulateERGM
#
#  note parameter and attribute names are not case sensitive (but filenames are)
#

numNodes = 1490 # Number of nodes in directed graph


################## Simulation settings #######################################

sampleSize = 100 #number of network samples to take from simulation

 
interval = 100000 # interval (iterations) between samples
 
burnin = 1000000000 # number of iterations to throw away before first sample

outputSimulatedNetworks = True  # write the simulated networks to file


useTNTsampler = True # use the tie-no-tie sampler

#useIFDsampler = True # use the IFD sampler
#numArcs = 19022 # fixed density for IFD sampler


################## Input filenames ###########################################



# Attribute files
# binattr_file for binary attributes (0 or 1 only)
# catattr_file for categorical attributes (any integer)
# The format of the file is a header line with whitespace
# delimited attribute names, and each subsequent line
# the attribute values for each attribute.
# The first line (after the header) has the values for
# node 0, then the next line node 1, and so on.
# 
# E.g.:
#
# gender class
# 0      1
# 1      2
# 1      3

#binattrFile = 
catattrFile = ../pythonDemo/polblogs/polblogs_catattr.txt

################## Output filenames ##########################################

# Filename of file to write statistics to

statsFile = stats_sim_estimated_polblogs.txt

# Pajek .net file prefix for simulatd networks
# Output filenames are constructed from the prefix specified here,
# with _<i>.net added, where <i> is the iteration
# So e.g. if simNetFilePrefix = sim then the output files are sim_10000.net etc.

simNetFilePrefix = simulation_estimated_polblogs


################## Parameters to estimate ####################################

#
# Structural parameters
#

structParams =  { Arc                 = -9.339708,
	          Reciprocity         = 3.781826,
	          AltInStars          = 0.8402879, 
                  AltOutStars         = 0.8620292, 
                  AltTwoPathsT        = -0.03414868, 
		  AltTwoPathsD        = 0.006196708, 
		  AltTwoPathsU        = 0.007523654,
		  AltKTrianglesT      = 1.510584, 
		  AltKTrianglesC      = -0.2287727,
                  AltKTrianglesD      = 0.02813545, 
		  AltKTrianglesU      = 0.005572217,
                  Isolates            = 0}

#
# Attribute parameters
#

attrParams = {Matching(value             = 0.4673188),
 	      MatchingReciprocity(value  = -1.621478)}


